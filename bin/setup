#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'
require 'dotenv/load'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

def check_for_env
  return false unless File.exist? '.env'

  puts "\n== ENV File Exists =="
  print 'Checking if appropriate values are there...    '

  if ENV.key?('API_KEY')
    puts ?✅
    true
  else
    puts ?❌
    false
  end
end

FileUtils.chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  # Install JavaScript dependencies if using Yarn
  # system('bin/yarn')

  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   cp 'config/database.yml.sample', 'config/database.yml'
  # end

  # Get user's username to add to .env if .env does not exist or does not have proper values.

  unless check_for_env

    puts "\n== Getting last.fm information =="

    # Get user's API key to add to .env
    print 'Input your last.fm api key: '
    api_key = gets.chomp
    File.open '.env', ?a do |file|
      file.write "API_KEY=#{api_key}\n"
    end
  end

  puts "\n== Preparing database =="
  system! 'bin/rails db:drop'
  system! 'bin/rails db:create'
  system! 'bin/rails db:schema:load'
  print 'Input your last.fm username: '
  username = gets.chomp

  system "USERNAME=#{username} bin/rails db:seed"

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'
end
